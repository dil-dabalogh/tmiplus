from __future__ import annotations

from typing import Protocol

from tmiplus.core.models import Assignment, Initiative, Member, PTORecord


class DataAdapter(Protocol):
    # Members
    def list_members(self) -> list[Member]: ...
    def upsert_members(self, members: list[Member]) -> None: ...
    def delete_members(self, names: list[str]) -> None: ...

    # Initiatives
    def list_initiatives(self) -> list[Initiative]: ...
    def upsert_initiatives(self, initiatives: list[Initiative]) -> None: ...
    def delete_initiatives(self, names: list[str]) -> None: ...

    # PTO
    def list_pto(self) -> list[PTORecord]: ...
    def upsert_pto(self, pto: list[PTORecord]) -> None: ...
    def delete_pto(
        self, keys: list[tuple[str, str]]
    ) -> None:  # (member_name, week_start)
        ...

    # Assignments
    def list_assignments(self) -> list[Assignment]: ...
    def upsert_assignments(self, assignments: list[Assignment]) -> None: ...
    def delete_assignments(
        self, keys: list[tuple[str, str]]
    ) -> None:  # (member_name, week_start)
        ...

    # Helper lookups
    def member_by_name(self, name: str) -> Member | None: ...
    def initiative_by_name(self, name: str) -> Initiative | None: ...
